// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppEigen.h>
#include <Rcpp.h>

using namespace Rcpp;

#ifdef RCPP_USE_GLOBAL_ROSTREAM
Rcpp::Rostream<true>&  Rcpp::Rcout = Rcpp::Rcpp_cout_get();
Rcpp::Rostream<false>& Rcpp::Rcerr = Rcpp::Rcpp_cerr_get();
#endif

// svd_dense
Rcpp::List svd_dense(SEXP mat, int k, int p, int s, int batchs, Rcpp::List params_pca);
RcppExport SEXP _pcaone_svd_dense(SEXP matSEXP, SEXP kSEXP, SEXP pSEXP, SEXP sSEXP, SEXP batchsSEXP, SEXP params_pcaSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< SEXP >::type mat(matSEXP);
    Rcpp::traits::input_parameter< int >::type k(kSEXP);
    Rcpp::traits::input_parameter< int >::type p(pSEXP);
    Rcpp::traits::input_parameter< int >::type s(sSEXP);
    Rcpp::traits::input_parameter< int >::type batchs(batchsSEXP);
    Rcpp::traits::input_parameter< Rcpp::List >::type params_pca(params_pcaSEXP);
    rcpp_result_gen = Rcpp::wrap(svd_dense(mat, k, p, s, batchs, params_pca));
    return rcpp_result_gen;
END_RCPP
}
// svd_sparse_col
Rcpp::List svd_sparse_col(SEXP mat, int k, int p, int s, int batchs, Rcpp::List params_pca);
RcppExport SEXP _pcaone_svd_sparse_col(SEXP matSEXP, SEXP kSEXP, SEXP pSEXP, SEXP sSEXP, SEXP batchsSEXP, SEXP params_pcaSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< SEXP >::type mat(matSEXP);
    Rcpp::traits::input_parameter< int >::type k(kSEXP);
    Rcpp::traits::input_parameter< int >::type p(pSEXP);
    Rcpp::traits::input_parameter< int >::type s(sSEXP);
    Rcpp::traits::input_parameter< int >::type batchs(batchsSEXP);
    Rcpp::traits::input_parameter< Rcpp::List >::type params_pca(params_pcaSEXP);
    rcpp_result_gen = Rcpp::wrap(svd_sparse_col(mat, k, p, s, batchs, params_pca));
    return rcpp_result_gen;
END_RCPP
}
// svd_sparse_row
Rcpp::List svd_sparse_row(Rcpp::S4 mat, int k, int p, int s, int batchs, Rcpp::List params_pca);
RcppExport SEXP _pcaone_svd_sparse_row(SEXP matSEXP, SEXP kSEXP, SEXP pSEXP, SEXP sSEXP, SEXP batchsSEXP, SEXP params_pcaSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Rcpp::S4 >::type mat(matSEXP);
    Rcpp::traits::input_parameter< int >::type k(kSEXP);
    Rcpp::traits::input_parameter< int >::type p(pSEXP);
    Rcpp::traits::input_parameter< int >::type s(sSEXP);
    Rcpp::traits::input_parameter< int >::type batchs(batchsSEXP);
    Rcpp::traits::input_parameter< Rcpp::List >::type params_pca(params_pcaSEXP);
    rcpp_result_gen = Rcpp::wrap(svd_sparse_row(mat, k, p, s, batchs, params_pca));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_pcaone_svd_dense", (DL_FUNC) &_pcaone_svd_dense, 6},
    {"_pcaone_svd_sparse_col", (DL_FUNC) &_pcaone_svd_sparse_col, 6},
    {"_pcaone_svd_sparse_row", (DL_FUNC) &_pcaone_svd_sparse_row, 6},
    {NULL, NULL, 0}
};

RcppExport void R_init_pcaone(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
